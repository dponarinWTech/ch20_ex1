<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>